//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\black\Documents\GitHub\Linear\scripts\\..\Linear.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LinearParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ILinearListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilation_unit([NotNull] LinearParser.Compilation_unitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.compilation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilation_unit([NotNull] LinearParser.Compilation_unitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct([NotNull] LinearParser.StructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct([NotNull] LinearParser.StructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement([NotNull] LinearParser.Struct_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement([NotNull] LinearParser.Struct_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement_define([NotNull] LinearParser.Struct_statement_defineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement_define"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement_define([NotNull] LinearParser.Struct_statement_defineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement_define_ranged"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement_define_ranged([NotNull] LinearParser.Struct_statement_define_rangedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement_define_ranged"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement_define_ranged([NotNull] LinearParser.Struct_statement_define_rangedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement_define_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement_define_array([NotNull] LinearParser.Struct_statement_define_arrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement_define_array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement_define_array([NotNull] LinearParser.Struct_statement_define_arrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement_define_array_indirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement_define_array_indirect([NotNull] LinearParser.Struct_statement_define_array_indirectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement_define_array_indirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement_define_array_indirect([NotNull] LinearParser.Struct_statement_define_array_indirectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement_output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement_output([NotNull] LinearParser.Struct_statement_outputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement_output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement_output([NotNull] LinearParser.Struct_statement_outputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.struct_statement_comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_statement_comment([NotNull] LinearParser.Struct_statement_commentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.struct_statement_comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_statement_comment([NotNull] LinearParser.Struct_statement_commentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.range_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_end([NotNull] LinearParser.Range_endContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.range_end"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_end([NotNull] LinearParser.Range_endContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.range_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRange_length([NotNull] LinearParser.Range_lengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.range_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRange_length([NotNull] LinearParser.Range_lengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.property_group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty_group([NotNull] LinearParser.Property_groupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.property_group"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty_group([NotNull] LinearParser.Property_groupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.property_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty_statement([NotNull] LinearParser.Property_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.property_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty_statement([NotNull] LinearParser.Property_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.term_replacement_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm_replacement_length([NotNull] LinearParser.Term_replacement_lengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.term_replacement_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm_replacement_length([NotNull] LinearParser.Term_replacement_lengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.term_replacement_i"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm_replacement_i([NotNull] LinearParser.Term_replacement_iContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.term_replacement_i"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm_replacement_i([NotNull] LinearParser.Term_replacement_iContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.term_replacement_p"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm_replacement_p([NotNull] LinearParser.Term_replacement_pContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.term_replacement_p"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm_replacement_p([NotNull] LinearParser.Term_replacement_pContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.term_replacement_u"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm_replacement_u([NotNull] LinearParser.Term_replacement_uContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.term_replacement_u"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm_replacement_u([NotNull] LinearParser.Term_replacement_uContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.expr_member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_member([NotNull] LinearParser.Expr_memberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.expr_member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_member([NotNull] LinearParser.Expr_memberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.expr_array_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_array_access([NotNull] LinearParser.Expr_array_accessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.expr_array_access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_array_access([NotNull] LinearParser.Expr_array_accessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.expr_un_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_un_op([NotNull] LinearParser.Expr_un_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.expr_un_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_un_op([NotNull] LinearParser.Expr_un_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] LinearParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] LinearParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOp([NotNull] LinearParser.OpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOp([NotNull] LinearParser.OpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.un_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUn_op([NotNull] LinearParser.Un_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.un_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUn_op([NotNull] LinearParser.Un_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.bool_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool_op([NotNull] LinearParser.Bool_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.bool_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool_op([NotNull] LinearParser.Bool_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinearParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] LinearParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinearParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] LinearParser.TermContext context);
}
